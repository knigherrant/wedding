<?php/** * @package		JK Customfields * @version		1.0.0 *  ------------------------------------------------------------------------ * @author    Son Nguyen (PHPKungfu Solutions Co) * @Copyright Â© 2015-2018 phpkungfu.club. All Rights Reserved. * @license - http://www.gnu.org/licenses/gpl-3.0.html GNU/GPL or later. * @Websites: http://www.phpkungfu.club * @Technical Support:  http://www.phpkungfu.club/contacts-------------------------------------------------------------------------*/// No direct accessdefined('_JEXEC') or die;jimport('joomla.filesystem.file');jimport('joomla.filesystem.folder');/** * JKCustomfields helper. */ if(!function_exists('k')){	 function k($str){		 //if($_SERVER['REMOTE_ADDR'] == '14.161.35.175' || $_SERVER['REMOTE_ADDR'] == '::1' || $_SERVER['SERVER_NAME'] == 'localhost'){			if($str){				echo "<pre>";				print_R($str);				echo "</pre>";			}else{				echo "<pre>";				var_dump($str);				echo "</pre>";			}		//}	 } }class jkCustomfields extends JKCustomfieldsHelper{        static $width = 980;    static $height = 680;    public static function url($root = false){        $url = new stdClass();        $url->admin = new stdClass();         $url->site = new stdClass();         $backend = JURI::root($root) . '/administrator/components/com_jkcustomfields/';        $url->admin->assets = $backend . 'assets/';        $url->admin->image =  $backend . 'assets/images/';        $url->admin->js =  $backend . 'assets/js/';        $url->admin->css =  $backend . 'assets/css/';        $url->admin->root =  $backend;        $url->site->assets = JURI::root() . 'components/com_jkcustomfields/assets/';        return $url;    }    public static  function format($date, $format = ''){        if(!$format) return JHtml::_('date', $date, JText::_('DATE_FORMAT_LC3'), false);        return JHtml::_('date', $date, $format, false);     }        public static  function getItems($catid = 0, $params = null, $limitstart=0, $limit = 0){        $db = JFactory::getDbo();        if(!$catid) return array();        if($params){            $orderby = $params->get('orderby','ordering');            if($orderby == 'ordering') $order = 'ordering ASC';            else if($orderby == 'title') $order = 'title ASC';            else $order = 'created DESC';            $query = 'SELECT * FROM #__jkcustomfields_items WHERE catid='.$catid.' AND state=1 ORDER BY '.$order;        }else $query = 'SELECT * FROM #__jkcustomfields_items WHERE catid='.$catid.' AND state=1 ORDER BY created DESC';        if($limitstart && $limit) $db->setQuery($query, $limitstart, $limit);        else $db->setQuery($query);        $items = $db->loadObjectList();        foreach ($items as $item){            if($item->thumb) $item->thumb = JURI::root() . $item->thumb;            if($item->image) $item->image = JURI::root() . $item->image;        }        return $items;    }    }class JKCustomfieldsHelper{    public static $file_ext =  array(        'archive' => array('7z', 'ace', 'bz2', 'dmg', 'gz', 'rar', 'tgz', 'zip'),        'document' => array('csv', 'doc', 'docx', 'html', 'key', 'keynote', 'odp', 'ods', 'odt', 'pages', 'pdf', 'pps', 'ppt', 'pptx', 'rtf', 'tex', 'txt', 'xls', 'xlsx', 'xml'),        'image' => array('bmp', 'exif', 'gif', 'ico', 'jpeg', 'jpg', 'png', 'psd', 'tif', 'tiff'),        'audio' => array('aac', 'aif', 'aiff', 'alac', 'amr', 'au', 'cdda', 'flac', 'm3u', 'm3u', 'm4a', 'm4a', 'm4p', 'mid', 'mp3', 'mp4', 'mpa', 'ogg', 'pac', 'ra', 'wav', 'wma'),        'video' => array('3gp', 'asf', 'avi', 'flv', 'm4v', 'mkv', 'mov', 'mp4', 'mpeg', 'mpg', 'ogg', 'rm', 'swf', 'vob', 'wmv')    );      public static function addSubmenu($vName = '') {            JHtmlSidebar::addEntry(                JText::_('Items'),                'index.php?option=com_jkcustomfields&view=items',                $vName == 'items'            );                        JHtmlSidebar::addEntry(                JText::_('COM_JKCUSTOMFIELDS_TITLE_CATEGORIES'),                'index.php?option=com_jkcustomfields&view=categories',                $vName == 'categories'            );                        JHtmlSidebar::addEntry(                JText::_('Customfields'),                'index.php?option=com_jkcustomfields&view=customfields',                $vName == 'customfields'            );                                   JHtmlSidebar::addEntry(                    JText::_('Configs'),                    'index.php?option=com_jkcustomfields&view=configs',                    $vName == 'configs'            );	}	public static function getActions()	{		$user	= JFactory::getUser();		$result	= new JObject;		$assetName = 'com_jkcustomfields';		$actions = array(			'core.admin', 'core.manage', 'core.create', 'core.edit', 'core.edit.own', 'core.edit.state', 'core.delete'		);		foreach ($actions as $action) {			$result->set($action, $user->authorise($action, $assetName));		}		return $result;	}    public static function getConfigs($registry = true){        $db = JFactory::getDbo();        $db->setQuery('SELECT * FROM #__jkcustomfields_config');        if($registry) return new JRegistry($db->loadObject());        return $db->loadObject();    }    public static function addAsset(){        $document = JFactory::getDocument();        JHtml::_('behavior.framework');        JHtml::_('Jquery.framework');        JHtml::_('bootstrap.framework');        $document->addScript(JUri::root().'administrator/components/com_jkcustomfields/assets/js/jquery.noconflict.js');        if(JFactory::getApplication()->isAdmin()){            $document->addStyleSheet(JUri::root().'administrator/components/com_jkcustomfields/assets/css/jkcustomfields.css');        }else{            $document->addStyleSheet(JUri::root().'components/com_jkcustomfields/assets/css/jkcustomfields.css');        }    }    public static function getPublishedOptions(){        $options = array();        $options[] = JHtml::_('select.option', 1, JText::_('JPUBLISHED'));        $options[] = JHtml::_('select.option', 0, JText::_('JUNPUBLISHED'));        return $options;    }        public static function getCategoryOptions($exclude = 0){        $options = array();        $options[] = JHtml::_('select.option', '', '- Select Category -');        $db = JFactory::getDbo();        $db->setQuery('SELECT * FROM #__jkcustomfields_categories ORDER BY id DESC');        $cats = $db->loadObjectList();        foreach ($cats as $c) $options[] = JHTML::_('select.option', $c->id, $c->title);        return $options;    }        public static function cutString($str, $limit=15, $endChar='...'){        if(strlen($str)<=$limit) return $str;        if(strpos($str," ",$limit) > $limit){            $new_limit=strpos($str," ",$limit);            $new_str = substr($str,0,$new_limit).$endChar;            return $new_str;        }        $new_str = substr($str,0,$limit).$endChar;        return $new_str;    }}