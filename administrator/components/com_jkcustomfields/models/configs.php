<?php/** * @package		JK Customfields * @version		1.0.0 *  ------------------------------------------------------------------------ * @author    Son Nguyen (PHPKungfu Solutions Co) * @Copyright Â© 2015-2018 phpkungfu.club. All Rights Reserved. * @license - http://www.gnu.org/licenses/gpl-3.0.html GNU/GPL or later. * @Websites: http://www.phpkungfu.club * @Technical Support:  http://www.phpkungfu.club/contacts-------------------------------------------------------------------------*/defined('_JEXEC') or die;jimport('joomla.application.component.modellist');jimport('joomla.application.component.modeladmin');/** * Methods supporting a list of JKCustomfields records. */class JKCustomfieldsModelConfigs extends JModelAdmin {    /**     * Constructor.     *     * @param    array    An optional associative array of configuration settings.     * @see        JController     * @since    1.6     */    public function __construct($config = array()) {        parent::__construct($config);    }    public function getTable($type = 'Config', $prefix = 'JKCustomfieldsTable', $config = array())	{		return JTable::getInstance($type, $prefix, $config);	}	/**	 * Method to get the record form.	 *	 * @param	array	$data		An optional array of data for the form to interogate.	 * @param	boolean	$loadData	True if the form is to load its own data (default case), false if not.	 * @return	JForm	A JForm object on success, false on failure	 * @since	1.6	 */	public function getForm($data = array(), $loadData = true)	{		// Initialise variables.		$app	= JFactory::getApplication();		// Get the form.		$form = $this->loadForm('com_jkcustomfields.config', 'config', array('control' => 'jform', 'load_data' => $loadData));                        		if (empty($form)) {			return false;		}                                $item = $this->getItem();		return $form;	}	/**	 * Method to get the data that should be injected in the form.	 *	 * @return	mixed	The data for the form.	 * @since	1.6	 */	protected function loadFormData()	{		// Check the session for previously entered form data.		$data = JFactory::getApplication()->getUserState('com_jkcustomfields.edit.config.data', array());		if (empty($data)) {			$data = $this->getItem();            		}		return $data;	}            /**     * Build an SQL query to load the list data.     *     * @return	JDatabaseQuery     * @since	1.6     */    protected function getListQuery() {        // Create a new query object.        $db = $this->getDbo();        $query = $db->getQuery(true);        // Select the required fields from the table.        $query->select(                $this->getState(                        'list.select', 'a.*'                )        );        $query->from('`#__jkcustomfields_config` AS a');        return $query;    }    public function getItem($pk = 1) {        $item = parent::getItem($pk);                return $item;    }        public function getItems($pk = 1) {        $item = parent::getItem($pk);        //$item->params = '';        return $item;    }        public function save($data){        //$post  = JFactory::getApplication()->input->get('post');                $post = JRequest::get('post');        $table = JTable::getInstance('config','JKCustomfieldsTable');        $table->load(1);        $table->bind($post);        $table->store();    }}