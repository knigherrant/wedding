<?php/** * @package		JK Customfields * @version		1.0.0 *  ------------------------------------------------------------------------ * @author    Son Nguyen (PHPKungfu Solutions Co) * @Copyright Â© 2015-2018 phpkungfu.club. All Rights Reserved. * @license - http://www.gnu.org/licenses/gpl-3.0.html GNU/GPL or later. * @Websites: http://www.phpkungfu.club * @Technical Support:  http://www.phpkungfu.club/contacts-------------------------------------------------------------------------*/// No direct accessdefined('_JEXEC') or die;jimport('joomla.application.component.view');/** * View class for a list of JKCustomfields. */class JKCustomfieldsViewItems extends JViewLegacy{	protected $items;	protected $pagination;	protected $state;        public $filterForm;	/**	 * Display the view	 */	public function display($tpl = null)	{                        $layout = strtolower($this->getLayout());                                   $this->state		= $this->get('State');            $this->items		= $this->get('Items');            $this->filterForm    = $this->get('FilterForm');            $this->pagination	= $this->get('Pagination');            // Check for errors.            if (count($errors = $this->get('Errors'))) {                    throw new Exception(implode("\n", $errors));            }            JKCustomfieldsHelper::addSubmenu('items');                        JKCustomfieldsHelper::addAsset();                        $this->addToolbar();                        $this->sidebar = JHtmlSidebar::render();                                    parent::display($tpl);	}	/**	 * Add the page title and toolbar.	 *	 * @since	1.6	 */	protected function addToolbar()	{		$state	= $this->get('State');		$canDo	= JKCustomfieldsHelper::getActions($state->get('filter.category_id'));                JToolBarHelper::title(JText::_('Items'), 'file');        //Check if the form exists before showing the add/edit buttons        $formPath = JPATH_COMPONENT_ADMINISTRATOR.'/views/item';        if (file_exists($formPath)) {            if ($canDo->get('core.create')) {			    JToolBarHelper::addNew('item.add','JTOOLBAR_NEW');		    }		    if ($canDo->get('core.edit') && isset($this->items[0])) {			    JToolBarHelper::editList('item.edit','JTOOLBAR_EDIT');		    }        }		if ($canDo->get('core.edit.state')) {            if (isset($this->items[0]->state)) {                            			    JToolBarHelper::divider();			    JToolBarHelper::custom('items.publish', 'publish.png', 'publish_f2.png','JTOOLBAR_PUBLISH', true);			    JToolBarHelper::custom('items.unpublish', 'unpublish.png', 'unpublish_f2.png', 'JTOOLBAR_UNPUBLISH', true);            }            if (isset($this->items[0])) {                JToolBarHelper::deleteList('', 'items.delete','JTOOLBAR_DELETE');            }            if (isset($this->items[0]->checked_out)) {            	JToolBarHelper::custom('items.checkin', 'checkin.png', 'checkin_f2.png', 'JTOOLBAR_CHECKIN', true);            }		}                    if ($canDo->get('core.admin')) {            JToolBarHelper::preferences('com_jkcustomfields');        }	}    	protected function getSortFields()	{		return array(            'a.state' => JText::_('JSTATUS'),            'a.title' => JText::_('COM_JKCUSTOMFIELDS_TITLE'),            'access_title' => JText::_('COM_JKCUSTOMFIELDS_ACCESS'),            'cat_title' => JText::_('COM_JKCUSTOMFIELDS_CATEGORY'),            'created_by_name' => JText::_('COM_JKCUSTOMFIELDS_OWNER'),            'a.created' => JText::_('COM_JKCUSTOMFIELDS_CREATED'),            'a.id' => JText::_('JGRID_HEADING_ID'),        );	}    }